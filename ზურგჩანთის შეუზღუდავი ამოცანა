#include<bits/stdc++.h>
using namespace std;
 
int unboundedKnapsack(int W,int n,int val[],int wt[]){
    int dp[W+1];
    memset(dp, 0, sizeof dp);
    for (int i=0; i<=W; i++)
      for (int j=0; j<n; j++)
         if (wt[j] <= i)
            dp[i] = max(dp[i], dp[i-wt[j]] + val[j]);
     return dp[W];
}
int main(){
     int W,n;
    cin>>n>>W;  //n-number of items, w-size of knapsack
    int val[n],wt[n];
    for(int i=0;i<n;i++) {
        cin>>val[i]>>wt[i]; //value and weight of items
    }
    cout << unboundedKnapsack(W, n, val, wt);
}
