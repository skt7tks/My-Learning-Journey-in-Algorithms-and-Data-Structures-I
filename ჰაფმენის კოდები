--კომპიუტერის მეხსიერებაში ყველა სიმბოლო თანაბარი რაოდენობის ბიტებს იკავებს. ჰაფმენის ალგორითმის იდეა იმაში მდგომარეობს, 
რომ სიმბოლოებს არათანაბარი რაოდენობის ბიტები გამოეყოთ და იმ სიმბოლოებს, რომლებიც ტექსტში ხშირად გვხდებიან მოკლე კოდი 
ჰქონდეთ, ხოლო იშვიათად გამოყენებულ სიმბოლოებს გრძელი კოდი შევუსაბამოთ. არათანაბარი კოდირებისას წარმოიქმნება კოდირებული
ტექსტის ცალსახად გაშიფვრის პრობლემა და სწორედ ამ პრობლემის გადასაჭრელადაა საჭირო ოპტიმალური პრეფიქსულობის თვისება. 

--ჰაფმენის კლასიკური ალგორითმი შემავალ მონაცემებად ღებულობს ტექსტში არსებული სიმბოლოების სიხშირეთა ცხრილს. ამ ცხრილის მიხედვით 
აიგება ჰაფმენის კოდირების ხე, რომელსაც ზოგჯერ Н-ხესაც უწოდებენ.

1.ტექსტში გამოყენებული ალფავიტის  სიმბოლოები წარმოადგენენ ხის ფოთლებს. თითოეულ ფოთოლს აქვს წონა, რომელიც ტოლია ან მისი ალბათური 
რაოდენობის ან სიმბოლოს სიხშირისა შესაკუმშ ტექსტში. 

2.სიხშირეთა სიიდან ირჩევენ უმცირესი წონის მქონე ორ ელემენტს. 

3.იქმნება ამ ორი ელემენტის მშობელი, რომლის წონა ტოლია მათი ჯამური წონისა. 

4.მშობელი ემატება სიხშირეთა სიაში, ხოლო მისი ორი შვილი - წაიშლება. 

5.მშობლიდან გამომავალ ერთ-ერთ წიბოს ენიჭება ბიტის მნიშვნელობა 1, ხოლო მეორეს - 0.

6.ვიმეორებთ ბიჯებს, დაწყებული მეორე ბიჯიდან, ვიდრე არ დაგვრჩება მხოლოდ ერთი ელემენტი. ეს ელემენტი იქნება ხის სათავე.

